# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'home.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import cv2
import sys
import logging as log
import datetime as dt
from time import sleep
import cv2
import csv
import os
import numpy as np
from PIL import Image,ImageTk
import pandas as pd
import datetime
import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import QMovie

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.WindowModal)
        MainWindow.resize(1567, 836)
        font = QtGui.QFont()
        font.setFamily("MS UI Gothic")
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(True)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowNestedDocks|QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 10, 881, 71))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 255);\n"
"border-radius:30px")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(0, 0, 1571, 91))
        self.graphicsView.setStyleSheet("background-color: rgb(0, 155, 232);")
        self.graphicsView.setObjectName("graphicsView")
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton.setGeometry(QtCore.QRect(1050, 20, 101, 48))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.commandLinkButton.setFont(font)
        self.commandLinkButton.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 255);\n"
"")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/QLabel/question.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton.setIcon(icon)
        self.commandLinkButton.setIconSize(QtCore.QSize(57, 24))
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.commandLinkButton_2 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_2.setGeometry(QtCore.QRect(1170, 20, 141, 48))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.commandLinkButton_2.setFont(font)
        self.commandLinkButton_2.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 170, 255);\n"
"")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/QLabel/user1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_2.setIcon(icon1)
        self.commandLinkButton_2.setIconSize(QtCore.QSize(20, 20))
        self.commandLinkButton_2.setAutoDefault(False)
        self.commandLinkButton_2.setDefault(False)
        self.commandLinkButton_2.setObjectName("commandLinkButton_2")
        self.graphicsView_2 = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_2.setGeometry(QtCore.QRect(20, 110, 311, 561))
        self.graphicsView_2.setStyleSheet("")
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 120, 111, 16))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:rgb(131, 131, 131)")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.listView = QtWidgets.QListView(self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(30, 150, 291, 511))
        self.listView.setStyleSheet("")
        self.listView.setObjectName("listView")
        self.commandLinkButton_4 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_4.setGeometry(QtCore.QRect(30, 160, 291, 48))
        self.commandLinkButton_4.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(0, 93, 139);")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("home.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_4.setIcon(icon2)
        self.commandLinkButton_4.setObjectName("commandLinkButton_4")
        self.commandLinkButton_5 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_5.setGeometry(QtCore.QRect(30, 210, 291, 48))
        self.commandLinkButton_5.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(0, 93, 139);")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("check.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_5.setIcon(icon3)
        self.commandLinkButton_5.setObjectName("commandLinkButton_5")
        self.commandLinkButton_6 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_6.setGeometry(QtCore.QRect(30, 360, 291, 48))
        self.commandLinkButton_6.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(0, 93, 139);")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("3712536.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_6.setIcon(icon4)
        self.commandLinkButton_6.setObjectName("commandLinkButton_6")
        self.commandLinkButton_7 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_7.setGeometry(QtCore.QRect(30, 410, 291, 48))
        self.commandLinkButton_7.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(0, 93, 139);")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("2097652.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_7.setIcon(icon5)
        self.commandLinkButton_7.setObjectName("commandLinkButton_7")
        self.commandLinkButton_8 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_8.setGeometry(QtCore.QRect(30, 460, 291, 48))
        self.commandLinkButton_8.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(0, 93, 139);")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("1716274.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_8.setIcon(icon6)
        self.commandLinkButton_8.setObjectName("commandLinkButton_8")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(1340, 20, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Symbol")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox.setFont(font)
        self.comboBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.comboBox.setStyleSheet("color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(0, 170, 255);")
        self.comboBox.setInsertPolicy(QtWidgets.QComboBox.InsertAtBottom)
        self.comboBox.setObjectName("comboBox")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/QLabel/user.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.comboBox.addItem(icon7, "")
        self.comboBox.addItem(icon1, "")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(360, 110, 1121, 31))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(134, 134, 134);\n"
"background-color: rgb(236, 236, 236);\n"
"border-radius:10;\n"
"padding:10px")
        self.label_3.setObjectName("label_3")
        self.commandLinkButton_3 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_3.setGeometry(QtCore.QRect(30, 260, 291, 48))
        self.commandLinkButton_3.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(0, 93, 139);")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_3.setIcon(icon8)
        self.commandLinkButton_3.setObjectName("commandLinkButton_3")
        self.commandLinkButton_9 = QtWidgets.QCommandLinkButton(self.centralwidget)
        self.commandLinkButton_9.setGeometry(QtCore.QRect(30, 310, 291, 48))
        self.commandLinkButton_9.setStyleSheet("background-color: rgb(0, 170, 255);\n"
"color: rgb(0, 93, 139);")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("brain.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.commandLinkButton_9.setIcon(icon9)
        self.commandLinkButton_9.setObjectName("commandLinkButton_9")
        self.gridTabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.gridTabWidget.setGeometry(QtCore.QRect(360, 160, 1121, 621))
        self.gridTabWidget.setStyleSheet("background-color: rgb(220, 220, 220);")
        self.gridTabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.gridTabWidget.setDocumentMode(False)
        self.gridTabWidget.setTabsClosable(False)
        self.gridTabWidget.setMovable(True)
        self.gridTabWidget.setTabBarAutoHide(False)
        self.gridTabWidget.setObjectName("gridTabWidget")
        self.gridTabWidgetPage1 = QtWidgets.QWidget()
        self.gridTabWidgetPage1.setObjectName("gridTabWidgetPage1")
      
        self.graphicsView_3 = QtWidgets.QGraphicsView(self.gridTabWidgetPage1)
        self.graphicsView_3.setGeometry(QtCore.QRect(410, 10, 701, 571))
        self.graphicsView_3.setStyleSheet("border-image: url(:/QLabel/bg.jpg);\n"
"border-radius:30")
        self.graphicsView_3.setObjectName("graphicsView_3")
        self.label_4 = QtWidgets.QLabel(self.gridTabWidgetPage1)
        self.label_4.setGeometry(QtCore.QRect(430, 20, 661, 541))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(51, 53, 52);\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 0), stop:1 rgba(255, 255, 255, 255));\n"
"border-radius:30")
        self.label_4.setTextFormat(QtCore.Qt.RichText)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setWordWrap(True)
        self.label_4.setObjectName("label_4")
        self.label_25 = QtWidgets.QLabel(self.gridTabWidgetPage1)
        self.label_25.setGeometry(QtCore.QRect(10, 10, 391, 571))
        self.label_25.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.label_25.setText("")
        self.label_25.setScaledContents(True)
        self.label_25.setObjectName("label_25")
        self.gridTabWidget.addTab(self.gridTabWidgetPage1, icon2, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(510, 70, 521, 361))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget.sizePolicy().hasHeightForWidth())
        self.tableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Cambria")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(60, 121, 181);")
        self.tableWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.tableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setRowCount(1000)
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setObjectName("tableWidget")
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget.setItem(0, 0, item)
        self.checkBox = QtWidgets.QCheckBox(self.tab)
        self.checkBox.setGeometry(QtCore.QRect(90, 140, 131, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.checkBox.setFont(font)
        self.checkBox.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 111, 166);")
        self.checkBox.setObjectName("checkBox")
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setGeometry(QtCore.QRect(90, 180, 391, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("color: rgb(0, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.graphicsView_5 = QtWidgets.QGraphicsView(self.tab)
        self.graphicsView_5.setGeometry(QtCore.QRect(10, 20, 1101, 561))
        self.graphicsView_5.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius:30")
        self.graphicsView_5.setObjectName("graphicsView_5")
        self.lineEdit = QtWidgets.QLineEdit(self.tab)
        self.lineEdit.setGeometry(QtCore.QRect(90, 90, 391, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("padding-left:20;\n"
"background-color: rgb(170, 255, 255);\n"
"color: rgb(0, 123, 185);\n"
"border-radius:20")
        self.lineEdit.setInputMask("")
        self.lineEdit.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.label_6 = QtWidgets.QLabel(self.tab)
        self.label_6.setGeometry(QtCore.QRect(0, 560, 451, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("padding-left:15px;\n"
"border-radius:10;\n"
"color: rgb(127, 127, 127);")
        self.label_6.setObjectName("label_6")
        self.label_5 = QtWidgets.QLabel(self.tab)
        self.label_5.setGeometry(QtCore.QRect(70, 60, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 115, 173);")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.graphicsView_5.raise_()
        self.tableWidget.raise_()
        self.checkBox.raise_()
        self.pushButton.raise_()
        self.lineEdit.raise_()
        self.label_6.raise_()
        self.label_5.raise_()
        self.gridTabWidget.addTab(self.tab, icon3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.graphicsView_6 = QtWidgets.QGraphicsView(self.tab_2)
        self.graphicsView_6.setGeometry(QtCore.QRect(10, 10, 1101, 571))
        self.graphicsView_6.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius:30")
        self.graphicsView_6.setObjectName("graphicsView_6")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_3.setGeometry(QtCore.QRect(770, 220, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.label_10 = QtWidgets.QLabel(self.tab_2)
        self.label_10.setGeometry(QtCore.QRect(520, 180, 55, 16))
        font = QtGui.QFont()
        font.setPointSize(7)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.label_7 = QtWidgets.QLabel(self.tab_2)
        self.label_7.setGeometry(QtCore.QRect(150, 80, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("padding-left:05px;\n"
"border-radius:10")
        self.label_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_11 = QtWidgets.QLabel(self.tab_2)
        self.label_11.setGeometry(QtCore.QRect(730, 180, 55, 16))
        font = QtGui.QFont()
        font.setPointSize(7)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_5.setGeometry(QtCore.QRect(660, 130, 201, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setStyleSheet("color: rgb(56, 113, 170);\n"
"border-style:inset;\n"
"border-width:3;\n"
"border-color: rgb(0, 170, 255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius:10;\n"
"padding-left: 10px;\n"
"")
        self.lineEdit_5.setClearButtonEnabled(True)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_4.setGeometry(QtCore.QRect(450, 130, 201, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("color: rgb(56, 113, 170);\n"
"border-style:inset;\n"
"border-width:3;\n"
"border-color: rgb(0, 170, 255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius:10;\n"
"padding-left: 10px;\n"
"")
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_9 = QtWidgets.QLabel(self.tab_2)
        self.label_9.setGeometry(QtCore.QRect(300, 180, 55, 16))
        font = QtGui.QFont()
        font.setPointSize(7)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(240, 80, 201, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("border-style:inset;\n"
"color: rgb(0, 147, 221);\n"
"border-width:3;\n"
"border-color: rgb(0, 170, 255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius:10;\n"
"padding-left: 10px;\n"
"")
        self.lineEdit_2.setInputMethodHints(QtCore.Qt.ImhDigitsOnly)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_8 = QtWidgets.QLabel(self.tab_2)
        self.label_8.setGeometry(QtCore.QRect(150, 130, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("padding-left:05px;\n"
"border-radius:10")
        self.label_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_2.setGeometry(QtCore.QRect(150, 220, 321, 41))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("")
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_3.setGeometry(QtCore.QRect(240, 130, 201, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("border-style:inset;\n"
"color: rgb(56, 113, 170);\n"
"border-width:3;\n"
"border-color: rgb(0, 170, 255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius:10;\n"
"padding-left: 10px;\n"
"")
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.pushButton_7 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_7.setGeometry(QtCore.QRect(150, 270, 171, 41))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 170, 255);\n"
"")
        self.pushButton_7.setObjectName("pushButton_7")
        self.label_26 = QtWidgets.QLabel(self.tab_2)
        self.label_26.setGeometry(QtCore.QRect(460, 80, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_26.setFont(font)
        self.label_26.setStyleSheet("padding-left:05px;\n"
"border-radius:10")
        self.label_26.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_26.setObjectName("label_26")
        self.comboBox_6 = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_6.setGeometry(QtCore.QRect(530, 80, 251, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox_6.setFont(font)
        self.comboBox_6.setStyleSheet("padding-left:20px;\n"
"background-color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(239, 239, 239);\n"
"\n"
"color: rgb(47, 95, 143);\n"
"border-radius:10")
        self.comboBox_6.setObjectName("comboBox_6")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.gridTabWidget.addTab(self.tab_2, icon8, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.graphicsView_7 = QtWidgets.QGraphicsView(self.tab_3)
        self.graphicsView_7.setGeometry(QtCore.QRect(0, 0, 1121, 591))
        self.graphicsView_7.setStyleSheet("border-radius:30;\n"
"background-color: rgb(255, 255, 255);")
        self.graphicsView_7.setObjectName("graphicsView_7")
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_4.setGeometry(QtCore.QRect(620, 240, 451, 51))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("\n"
"background-color: rgb(0, 170, 255);\n"
"color: rgb(255, 255, 255);\n"
"")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("brain.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.pushButton_4.setIcon(icon10)
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_12 = QtWidgets.QLabel(self.tab_3)
        self.label_12.setGeometry(QtCore.QRect(20, 440, 571, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("color: rgb(118, 118, 118);\n"
"background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop:0 rgba(255, 235, 235, 206), stop:0.35 rgba(255, 188, 188, 80), stop:0.4 rgba(255, 162, 162, 80), stop:0.425 rgba(255, 132, 132, 156), stop:0.44 rgba(252, 128, 128, 80), stop:1 rgba(255, 255, 255, 0));")
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.graphicsView_8 = QtWidgets.QGraphicsView(self.tab_3)
        self.graphicsView_8.setGeometry(QtCore.QRect(800, 120, 71, 61))
        self.graphicsView_8.setStyleSheet("border-image: url(:/QLabel/warn.png);\n"
"background-color: rgb(255, 255, 255);")
        self.graphicsView_8.setObjectName("graphicsView_8")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_3)
        self.tableWidget_2.setGeometry(QtCore.QRect(30, 70, 521, 361))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_2.sizePolicy().hasHeightForWidth())
        self.tableWidget_2.setSizePolicy(sizePolicy)
        self.tableWidget_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(60, 121, 181);")
        self.tableWidget_2.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_2.setAlternatingRowColors(True)
        self.tableWidget_2.setRowCount(1000)
        self.tableWidget_2.setColumnCount(7)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.label_13 = QtWidgets.QLabel(self.tab_3)
        self.label_13.setEnabled(True)
        self.label_13.setGeometry(QtCore.QRect(620, 180, 451, 51))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("color: rgb(0, 0, 255);\n"
"background-color: rgb(255, 255, 255);\n"
"Border-radius:20")
        self.label_13.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setWordWrap(True)
        self.label_13.setObjectName("label_13")
        self.gridTabWidget.addTab(self.tab_3, icon9, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.graphicsView_9 = QtWidgets.QGraphicsView(self.tab_4)
        self.graphicsView_9.setGeometry(QtCore.QRect(0, 0, 1111, 581))
        self.graphicsView_9.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius:30")
        self.graphicsView_9.setObjectName("graphicsView_9")
        self.label_14 = QtWidgets.QLabel(self.tab_4)
        self.label_14.setGeometry(QtCore.QRect(50, 0, 1011, 51))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("border-radius:10;\n"
"\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 99, 148);")
        self.label_14.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_14.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_14.setTextFormat(QtCore.Qt.PlainText)
        self.label_14.setScaledContents(False)
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setWordWrap(False)
        self.label_14.setObjectName("label_14")
        self.graphicsView_10 = QtWidgets.QGraphicsView(self.tab_4)
        self.graphicsView_10.setGeometry(QtCore.QRect(230, 0, 61, 51))
        self.graphicsView_10.setStyleSheet("border-image: url(:/QLabel/3712536.png);\n"
"background-color: rgb(0, 99, 148);")
        self.graphicsView_10.setObjectName("graphicsView_10")
        self.pushButton_5 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_5.setGeometry(QtCore.QRect(130, 100, 821, 41))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_5.setStyleSheet("background-color: rgb(85, 170, 255);\n"
"color: rgb(255, 255, 255);\n"
"")
        self.pushButton_5.setObjectName("pushButton_5")
        self.tableWidget_3 = QtWidgets.QTableWidget(self.tab_4)
        self.tableWidget_3.setGeometry(QtCore.QRect(130, 160, 821, 301))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_3.sizePolicy().hasHeightForWidth())
        self.tableWidget_3.setSizePolicy(sizePolicy)
        self.tableWidget_3.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(60, 121, 181);")
        self.tableWidget_3.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_3.setAlternatingRowColors(True)
        self.tableWidget_3.setRowCount(1000)
        self.tableWidget_3.setColumnCount(7)
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.label_18 = QtWidgets.QLabel(self.tab_4)
        self.label_18.setGeometry(QtCore.QRect(270, 470, 571, 41))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_18.setFont(font)
        self.label_18.setStyleSheet("color: rgb(118, 118, 118);\n"
"background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.5, fx:0.5, fy:0.5, stop:0 rgba(255, 235, 235, 206), stop:0.35 rgba(255, 188, 188, 80), stop:0.4 rgba(255, 162, 162, 80), stop:0.425 rgba(255, 132, 132, 156), stop:0.44 rgba(252, 128, 128, 80), stop:1 rgba(255, 255, 255, 0));")
        self.label_18.setAlignment(QtCore.Qt.AlignCenter)
        self.label_18.setObjectName("label_18")
        self.gridTabWidget.addTab(self.tab_4, icon4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.label_21 = QtWidgets.QLabel(self.tab_5)
        self.label_21.setGeometry(QtCore.QRect(50, 0, 1011, 51))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_21.setFont(font)
        self.label_21.setStyleSheet("border-radius:10;\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 99, 148);")
        self.label_21.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_21.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_21.setTextFormat(QtCore.Qt.PlainText)
        self.label_21.setScaledContents(False)
        self.label_21.setAlignment(QtCore.Qt.AlignCenter)
        self.label_21.setWordWrap(False)
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.tab_5)
        self.label_22.setGeometry(QtCore.QRect(460, 80, 251, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_22.setFont(font)
        self.label_22.setAlignment(QtCore.Qt.AlignCenter)
        self.label_22.setObjectName("label_22")
        self.graphicsView_11 = QtWidgets.QGraphicsView(self.tab_5)
        self.graphicsView_11.setGeometry(QtCore.QRect(0, 0, 1111, 581))
        self.graphicsView_11.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius:30")
        self.graphicsView_11.setObjectName("graphicsView_11")
        self.pushButton_6 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_6.setGeometry(QtCore.QRect(150, 450, 821, 41))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_6.setStyleSheet("background-color: rgb(85, 170, 255);\n"
"color: rgb(255, 255, 255);\n"
"")
        self.pushButton_6.setObjectName("pushButton_6")
        self.comboBox_5 = QtWidgets.QComboBox(self.tab_5)
        self.comboBox_5.setGeometry(QtCore.QRect(460, 115, 251, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox_5.setFont(font)
        self.comboBox_5.setStyleSheet("padding-left:20px;\n"
"background-color: rgb(239, 239, 239);")
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.graphicsView_12 = QtWidgets.QGraphicsView(self.tab_5)
        self.graphicsView_12.setGeometry(QtCore.QRect(230, 0, 61, 51))
        self.graphicsView_12.setStyleSheet("border-image: url(:/QLabel/2097652.png);\n"
"background-color: rgb(0, 99, 148);")
        self.graphicsView_12.setObjectName("graphicsView_12")
        self.tableWidget_5 = QtWidgets.QTableWidget(self.tab_5)
        self.tableWidget_5.setGeometry(QtCore.QRect(150, 180, 821, 261))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tableWidget_5.sizePolicy().hasHeightForWidth())
        self.tableWidget_5.setSizePolicy(sizePolicy)
        self.tableWidget_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tableWidget_5.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_5.setAlternatingRowColors(True)
        self.tableWidget_5.setRowCount(1000)
        self.tableWidget_5.setColumnCount(7)
        self.tableWidget_5.setObjectName("tableWidget_5")
        self.pushButton_8 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_8.setGeometry(QtCore.QRect(770, 110, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setObjectName("pushButton_8")
        self.label_24 = QtWidgets.QLabel(self.tab_5)
        self.label_24.setGeometry(QtCore.QRect(60, 90, 151, 81))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Black")
        font.setBold(True)
        font.setWeight(75)
        self.label_24.setFont(font)
        self.label_24.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(55, 111, 167);")
        
        self.pushButton_8.raise_()
        self.label_24.setAlignment(QtCore.Qt.AlignCenter)
        self.label_24.setWordWrap(True)
        self.label_24.setObjectName("label_24")
        self.pushButton_8 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_8.setGeometry(QtCore.QRect(150, 500, 261, 41))
        self.pushButton_9 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_9.setGeometry(QtCore.QRect(430, 500, 261, 41))
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(0, 99, 148);")
        self.pushButton_9.setObjectName("pushButton_9")
        font = QtGui.QFont()
        font.setFamily("Office")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton_8.setObjectName("pushButton_8")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_6.setGeometry(QtCore.QRect(770, 120, 181, 31))
        self.lineEdit_6.setStyleSheet("border-style:inset;\n"
"color: rgb(0, 147, 221);\n"
"border-width:3;\n"
"border-color: rgb(0, 170, 255);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius:10;\n"
"padding-left: 10px;\n"
"")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.graphicsView_11.raise_()
        self.label_21.raise_()
        self.label_22.raise_()
        self.pushButton_6.raise_()
        self.comboBox_5.raise_()
        self.graphicsView_12.raise_()
        self.tableWidget_5.raise_()
        self.label_24.raise_()
        self.lineEdit_6.raise_()
        self.pushButton_8.raise_()
        self.pushButton_9.raise_()
        self.gridTabWidget.addTab(self.tab_5, icon5, "")
        self.graphicsView.raise_()
        self.label.raise_()
        self.commandLinkButton.raise_()
        self.commandLinkButton_2.raise_()
        self.graphicsView_2.raise_()
        self.label_2.raise_()
        self.listView.raise_()
        self.commandLinkButton_4.raise_()
        self.commandLinkButton_5.raise_()
        self.commandLinkButton_6.raise_()
        self.commandLinkButton_7.raise_()
        self.commandLinkButton_8.raise_()
        self.comboBox.raise_()
        self.label_3.raise_()
        self.commandLinkButton_3.raise_()
        self.commandLinkButton_9.raise_()
        self.gridTabWidget.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.gridTabWidget.setCurrentIndex(0)
        self.commandLinkButton_4.clicked.connect(self.gridTabWidget.show)
        self.commandLinkButton_5.clicked.connect(self.gridTabWidget.show)
        self.commandLinkButton_3.clicked.connect(self.gridTabWidget.show)
        self.commandLinkButton_7.clicked.connect(self.gridTabWidget.show)
        self.pushButton_3.clicked.connect(self.lineEdit_5.clear)
        self.pushButton_3.clicked.connect(self.lineEdit_4.clear)
        self.pushButton_3.clicked.connect(self.lineEdit_3.clear)
        self.pushButton_3.clicked.connect(self.lineEdit_2.clear)
        self.commandLinkButton_9.clicked.connect(self.gridTabWidget.show)
        self.commandLinkButton_6.clicked.connect(self.gridTabWidget.show)
        self.pushButton.clicked.connect(self.lineEdit.copy)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "IoT Based Attendance System Using Face Detection"))
        self.commandLinkButton.setText(_translate("MainWindow", "HELP"))
        self.commandLinkButton_2.setText(_translate("MainWindow", "ABOUT US"))
        self.label_2.setText(_translate("MainWindow", "USER MENU"))
        self.commandLinkButton_4.setText(_translate("MainWindow", "Home "))
        self.commandLinkButton_5.setText(_translate("MainWindow", "Check Registered Students"))
        self.commandLinkButton_6.setText(_translate("MainWindow", "Automatic Fill Attendance"))
        self.commandLinkButton_7.setText(_translate("MainWindow", "Manually Fill Attendance"))
        self.commandLinkButton_8.setText(_translate("MainWindow", "Logout"))
        self.comboBox.setItemText(0, _translate("MainWindow", "ADMIN"))
        self.comboBox.setItemText(1, _translate("MainWindow", "ADD NEW USER ADMIN"))
        self.label_3.setText(_translate("MainWindow", "DASHBOARD "))
        self.commandLinkButton_3.setText(_translate("MainWindow", "Add New Student"))
        self.commandLinkButton_9.setText(_translate("MainWindow", "Train Registered Students Faces"))
        self.label_4.setText(_translate("MainWindow", "Welcome to Iot Based Attendance System Using Face Detection"))
        self.tableWidget.setSortingEnabled(True)
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.checkBox.setText(_translate("MainWindow", "Show Password"))
        self.pushButton.setText(_translate("MainWindow", "SUBMIT"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Please verify password"))
        self.label_6.setText(_translate("MainWindow", "Admin Authentication Check"))
        self.label_5.setText(_translate("MainWindow", "PASSWORD"))
        self.pushButton_3.setText(_translate("MainWindow", "Clear"))
        self.label_10.setText(_translate("MainWindow", "M NAME"))
        self.label_7.setText(_translate("MainWindow", "Enrolment "))
        self.label_11.setText(_translate("MainWindow", "L NAME"))
        self.label_9.setText(_translate("MainWindow", "F NAME"))
        self.label_8.setText(_translate("MainWindow", "Name"))
        self.pushButton_2.setText(_translate("MainWindow", "Take Images"))
        self.pushButton_2.setShortcut(_translate("MainWindow", "Return"))
        self.pushButton_7.setText(_translate("MainWindow", "Capturing Help ?"))
        self.label_26.setText(_translate("MainWindow", "Branch"))
        self.comboBox_6.setItemText(0, _translate("MainWindow", "CO"))
        self.comboBox_6.setItemText(1, _translate("MainWindow", "ME"))
        self.comboBox_6.setItemText(2, _translate("MainWindow", "IT"))
        self.comboBox_6.setItemText(3, _translate("MainWindow", "CE"))
        self.comboBox_6.setItemText(4, _translate("MainWindow", "EJ"))
        self.comboBox_6.setItemText(5, _translate("MainWindow", "EE"))
        self.pushButton_4.setText(_translate("MainWindow", "Train Captured Images"))
        self.pushButton_4.setShortcut(_translate("MainWindow", "Return"))
        self.label_12.setText(_translate("MainWindow", "REGISTERED STUDENTS LIST"))
        self.label_13.setText(_translate("MainWindow", "NOTE: Before Clicking on Images Check Once Again that Faces of Students captured correctly for easier iderntification of machine. "))
        self.label_14.setText(_translate("MainWindow", "FACIAL AUTOMATIC ATTENDANCE PAGE"))
        self.pushButton_5.setText(_translate("MainWindow", "Fill Attendance"))
        self.label_18.setText(_translate("MainWindow", "FILLED ATTENDANCE LIST"))
        self.label_21.setText(_translate("MainWindow", "MANUALLY FILLING ATTENDANCE PAGE"))
        self.label_22.setText(_translate("MainWindow", "CHOOSE DEPARTMENT/BRANCH"))
        self.pushButton_6.setText(_translate("MainWindow", "Fill Attendance"))
        self.comboBox_5.setItemText(0, _translate("MainWindow", "CO"))
        self.comboBox_5.setItemText(1, _translate("MainWindow", "ME"))
        self.comboBox_5.setItemText(2, _translate("MainWindow", "IT"))
        self.comboBox_5.setItemText(3, _translate("MainWindow", "CE"))
        self.comboBox_5.setItemText(4, _translate("MainWindow", "EJ"))
        self.comboBox_5.setItemText(5, _translate("MainWindow", "EE"))
        self.label_24.setText(_translate("MainWindow", "CHOOSE STUDENT FOR MARKING ATTENDANCE IN TABLE"))
        self.pushButton_8.setText(_translate("MainWindow", "Load Data"))
        self.pushButton_8.setText(_translate("MainWindow", "Check Today\'s Attendance"))
        self.pushButton_9.setText(_translate("MainWindow", "Check Datewise Attendance"))
        self.checkBox.clicked.connect(self.show)
        self.pushButton.clicked.connect(self.log_in)
        self.commandLinkButton.clicked.connect(self.visit1)
        self.commandLinkButton_2.clicked.connect(self.visit2)
        self.pushButton_2.clicked.connect(self.takeimg)
        self.commandLinkButton_4.clicked.connect(self.show1)
        self.commandLinkButton_5.clicked.connect(self.show2)
        self.commandLinkButton_3.clicked.connect(self.show3)
        self.commandLinkButton_9.clicked.connect(self.show4)
        self.commandLinkButton_6.clicked.connect(self.show5)
        self.commandLinkButton_7.clicked.connect(self.show6)
        self.commandLinkButton_8.clicked.connect(self.show7)
        self.commandLinkButton_8.clicked.connect(MainWindow.close)
        self.pushButton_4.clicked.connect(self.trainimg)
        self.pushButton_7.clicked.connect(self.visit)
        self.comboBox_5.currentIndexChanged.connect(self.fill2)
        self.movie = QMovie("hoem.gif")
        self.label_25.setMovie(self.movie)
        self.pushButton_5.clicked.connect(self.fill)
        self.startAnimation()
        self.tableWidget_5.cellClicked['int','int'].connect(self.cell_was_clicked)
        self.pushButton_6.clicked.connect(self.man)
        self.pushButton_8.clicked.connect(self.check)
        self.pushButton_9.clicked.connect(self.date)
    def date(self):
        from date import Ui_Form
        self.Form = QtWidgets.QWidget()
        self.ui = Ui_Form()
        self.ui.setupUi(self.Form)
        self.Form.show()

    def check(self):
        import attendance

    def man(self):
        enrol=self.lineEdit_6.text()
        import pymysql.connections

        ###Connect to the database
        try:
            global cursor
            connection = pymysql.connect(host='localhost', user='root', password='', db='registered')
            cursor = connection.cursor()
           
            
            cursor.execute("select Enrolment from studentdetails where Enrolment='"+str(enrol)+"'")
            ENROLLMENT=cursor.fetchone()  
            cursor.execute("select Name from studentdetails where Enrolment='"+str(enrol)+"'")
            NAME=cursor.fetchone() 
            print(ENROLLMENT)
            print(NAME)
        except Exception as e:
            print(e)

        import pymysql.connections

        ###Connect to the database
        try:
            
            connection = pymysql.connect(host='localhost', user='root', password='', db='man')
            cursor = connection.cursor()
        except Exception as e:
            print(e)
            
        ts = time.time()    
        Date = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d')
        DB_table_name = "Attendance_"+str(Date)
        sql = "CREATE TABLE " + DB_table_name + """
                        (ID INT NOT NULL AUTO_INCREMENT,
                         ENROLLMENT varchar(100) NOT NULL,
                         NAME VARCHAR(50) NOT NULL,
                         DATE VARCHAR(20) NOT NULL,
                         TIME VARCHAR(20) NOT NULL,
                             PRIMARY KEY (ID)
                             );
                        """

        timeStamp = datetime.datetime.fromtimestamp(ts).strftime('%H:%M:%S')
        Time = datetime.datetime.fromtimestamp(ts).strftime('%H:%M:%S')
        Hour, Minute, Second = timeStamp.split(":")
        try:
            cursor.execute(sql)  #for create a table
            
            connection.commit()
        except:
            
            import pymysql.connections
            try:
                connection = pymysql.connect(host='localhost', user='root', password='', db='man')
                cursor = connection.cursor()
                Insert_data = "INSERT INTO " + DB_table_name + " (ID,ENROLLMENT,NAME,DATE,TIME) VALUES (0, %s, %s, %s,%s)"
                VALUES = (str(ENROLLMENT), str(NAME), str(Date), str(Time))
                try:
                    cursor.execute(Insert_data, VALUES)
                    print("Inserted")
                    connection.commit()
                except Exception as e:
                    print(e)
            except:
                print("error")
            try:
                col_names = ['Enrolment', 'FName', 'Date', 'Time']
                attendance = pd.DataFrame(columns=col_names)
                attendance.loc[len(attendance)]=[ENROLLMENT, NAME,Date , timeStamp]
                fileName = "Attendance/"  + "Attendance_" + Date + "_" + ".csv"
                print(attendance)
                attendance.to_csv(fileName)
                attendance = attendance.drop_duplicates(['Enrolment'])
                msgBox = QMessageBox()
                msgBox.setIcon(QMessageBox.Warning)
                msgBox.setText("Successfully Filled Attendance")
                msgBox.setWindowTitle("Warning")
                msgBox.setStandardButtons(QMessageBox.Ok)
                returnValue = msgBox.exec()
            except Exception as e:
                print(e)
                
        else:    
            import pymysql.connections
            try:
               
                connection = pymysql.connect(host='localhost', user='root', password='', db='man')
                cursor = connection.cursor()
                Insert_data = "INSERT INTO " + DB_table_name + " (ID,ENROLLMENT,NAME,DATE,TIME) VALUES (0, %s, %s, %s,%s)"
                VALUES = (str(ENROLLMENT), str(NAME), str(Date), str(Time))
                try:
                    cursor.execute(Insert_data, VALUES)
                    print("Inserted")
                    connection.commit()
                except Exception as e:
                    print(e)
            except:
                print("error")
       
       
        
                    

    def cell_was_clicked(self, row, column):
        print("Row %d and Column %d was clicked" % (row, column))
        item = self.tableWidget_5.itemAt(row, column)
        id1 = item.text()
        self.lineEdit_6.setText(id1)

   
               
    def show(self):
        self.lineEdit.setEchoMode(QtWidgets.QLineEdit.Normal)
    def show1(self):
        self.gridTabWidget.setCurrentIndex(0)
    def show2(self):
        self.gridTabWidget.setCurrentIndex(1)
    def show3(self):
        self.gridTabWidget.setCurrentIndex(2)
    def show4(self):
        self.gridTabWidget.setCurrentIndex(3)
    def show5(self):
        self.gridTabWidget.setCurrentIndex(4)
    def show6(self):
        self.gridTabWidget.setCurrentIndex(5)
    def show7(self):
        msgBox = QMessageBox()
        msgBox.setIcon(QMessageBox.Warning)
        msgBox.setText("Are You Sure Want To Logout !!")
        msgBox.setWindowTitle("LOGOUT")
        msgBox.setStandardButtons(QMessageBox.Yes | QMessageBox.No)

        returnValue = msgBox.exec()
        if returnValue == QMessageBox.Yes:
            from login import Ui_Form
            self.Form = QtWidgets.QWidget()
            self.ui = Ui_Form()
            self.ui.setupUi(self.Form)
            self.Form.show()
        elif returnValue == QMessageBox.No:
            from home import Ui_MainWindow
            self.Form = QtWidgets.QMainWindow()
            self.ui = Ui_MainWindow()
            self.ui.setupUi(self.Form)
            self.Form.show()
    def visit(self):
        from warn import Ui_Form
        self.Form = QtWidgets.QWidget()
        self.ui = Ui_Form()
        self.ui.setupUi(self.Form)
        self.Form.show()

    def visit1(self):
        from help import Ui_Form
        self.Form = QtWidgets.QWidget()
        self.ui = Ui_Form()
        self.ui.setupUi(self.Form)
        self.Form.show()

    def visit2(self):
        from about import Ui_Form
        self.Form = QtWidgets.QWidget()
        self.ui = Ui_Form()
        self.ui.setupUi(self.Form)
        self.Form.show()
        
    def startAnimation(self):
        self.movie.start()
  
    # Stop Animation(According to need)
    def stopAnimation(self):
        self.movie.stop()

    def log_in(self):

        password= self.lineEdit.text()
        if  password == 'admin123':
           
            import csv
            people = []
            reader = csv.reader(open('StudentDetails/StudentDetails.csv'))
            for row in reader:
                people.append(row)

                rowCount = len(people)
                colCount = max([len(p) for p in people])

            for row, person in enumerate(people):
                for column, value in enumerate(person):

                    newItem = QtWidgets.QTableWidgetItem(value)
                    self.tableWidget.setItem(row, column, newItem)

            self.tableWidget.resizeColumnsToContents()
            self.tableWidget.resizeRowsToContents()


        else:
            invalid = 'Incorrect ID or Password'
            print("Invalid Password")


    
        
        
    def takeimg(self):
        enrollment=self.lineEdit_2.text()
        name=self.lineEdit_3.text()
        mname=self.lineEdit_4.text()
        lname=self.lineEdit_5.text()
        branch=self.comboBox_6.currentText()
        full=name+" "+mname+" "+lname
        cascPath = "haarcascade_frontalface_default.xml"
        faceCascade = cv2.CascadeClassifier(cascPath)
        log.basicConfig(filename='webcam.log',level=log.INFO)

        video_capture = cv2.VideoCapture('http://192.168.43.44:8080/video')
        anterior = 0

        try:
            cam = cv2.VideoCapture('http://192.168.43.44:8080/video')
            detector = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

            sampleNum = 0
            while (True):
                ret, img = cam.read()
                gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
                faces = detector.detectMultiScale(gray, 1.3, 5)
                for (x, y, w, h) in faces:
                    cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 2)
                            # incrementing sample number
                    sampleNum = sampleNum + 1
                            # saving the captured face in the dataset folder
                    cv2.imwrite("TrainingImage/ " +self.lineEdit_3.text()+"."+self.lineEdit_2.text()+"."+ str(sampleNum) + ".jpg",
                                        gray[y:y + h, x:x + w])
                    cv2.imshow('Frame', img)
                        # wait for 100 miliseconds
                if cv2.waitKey(1) & 0xFF == ord('q'):
                    break
                        # break if the sample number is morethan 100
                elif sampleNum > 70:
                    break
            cam.release()
            cv2.destroyAllWindows()
            
                
            ts = time.time()
            res = "Images Saved for Enrollment : "+enrollment+" Name "+name+" "+lname
            Date = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d')
            Time = datetime.datetime.fromtimestamp(ts).strftime('%H:%M:%S')
            row = [enrollment, name,mname,lname,branch, Date, Time]
            with open('StudentDetails\StudentDetails.csv', 'a+') as csvFile:
                writer = csv.writer(csvFile, delimiter=',')
                writer.writerow(row)
                csvFile.close()
            import pymysql.connections

            ###Connect to the database
            try:
                global cursor
                connection = pymysql.connect(host='localhost', user='root', password='', db='registered')
                cursor = connection.cursor()
                Insert_data = "INSERT INTO Studentdetails (Enrolment,Name,Branch,Date,Time) VALUES (%s, %s, %s, %s,%s)"
                VALUES = (str(enrollment), str(full),str(branch), str(Date), str(Time))
                try:
                    cursor.execute(Insert_data, VALUES)
                    connection.commit()
                except Exception as e:
                    print(e)
                    
            except Exception as e:
                print(e)

            msgBox = QMessageBox()
            msgBox.setIcon(QMessageBox.Information)
            msgBox.setText(res)
            msgBox.setWindowTitle("LOGOUT")
            msgBox.setStandardButtons(QMessageBox.Ok)
            returnValue = msgBox.exec()
            if returnValue == QMessageBox.Ok:
                self.lineEdit_2.clear()
                self.lineEdit_3.clear()
                self.lineEdit_4.clear()
                self.lineEdit_5.clear()
            



            
        except FileExistsError as F:
            f = 'Student Data already exists'
            msgBox = QMessageBox()
            msgBox.setIcon(QMessageBox.Warning)
            msgBox.setText(f)
            msgBox.setWindowTitle("Warning")
            msgBox.setStandardButtons(QMessageBox.Ok)
            returnValue = msgBox.exec()

        
    def trainimg(self):
        import csv
        people = []
        reader = csv.reader(open('StudentDetails/StudentDetails.csv'))
        
        for row in reader:
            people.append(row)

            rowCount = len(people)
            colCount = max([len(p) for p in people])

        for row, person in enumerate(people):
            for column, value in enumerate(person):

                newItem = QtWidgets.QTableWidgetItem(value)
                
                self.tableWidget_2.setItem(row, column, newItem)

        self.tableWidget_2.resizeColumnsToContents()
        self.tableWidget_2.resizeRowsToContents()
        import tkinter.messagebox as msgbox
        from train import train
        msg=train()
        msgBox = QMessageBox()
        msgBox.setIcon(QMessageBox.Information)
        msgBox.setText(msg)
        msgBox.setWindowTitle("Model Trained")
        msgBox.setStandardButtons(QMessageBox.Ok)
        returnValue = msgBox.exec()
 
    def fill(self):
        import fill
        msgBox = QMessageBox()
        msgBox.setIcon(QMessageBox.Information)
        msgBox.setText("Attendance Filled Successfully")
        msgBox.setWindowTitle("Success")
        msgBox.setStandardButtons(QMessageBox.Ok)
        returnValue = msgBox.exec()
        self.table()
        
    def table(self):
        import csv
        people = []
        try:
            ts = time.time()
            date = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d')
            fileName="Attendance\Attendance_"+date+"_.csv"

            reader = csv.reader(open(fileName))
        except Exception as e:
            print(e)
            
        for row in reader:
            people.append(row)

            rowCount = len(people)
            colCount = max([len(p) for p in people])

        for row, person in enumerate(people):
            for column, value in enumerate(person):

                newItem = QtWidgets.QTableWidgetItem(value)
                
                self.tableWidget_3.setItem(row, column, newItem)

        self.tableWidget_3.resizeColumnsToContents()
        self.tableWidget_3.resizeRowsToContents()

    def fill2(self):
        branch= self.comboBox_5.currentText()
        import pymysql.connections

        ###Connect to the database
        try:
            global cursor
            connection = pymysql.connect(host='localhost', user='root', password='', db='registered')
            cursor = connection.cursor()
           
            
            cursor.execute("select * from studentdetails where Branch='"+str(branch)+"'")
                
            result= cursor.fetchall()
            self.tableWidget_5.setRowCount(0)
            for row_number,row_data in enumerate(result):
                self.tableWidget_5.insertRow(row_number)

                for column_number,data in enumerate(row_data):
                    newItem = QtWidgets.QTableWidgetItem(data)
                    self.tableWidget_5.setItem(row_number,column_number,newItem)
            self.tableWidget.resizeColumnsToContents()
            self.tableWidget.resizeRowsToContents()     
            connection.commit()
       
                    
        except Exception as e:
            print(e)
        

import service


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
