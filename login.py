# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from home import Ui_MainWindow
from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(570, 459)
        Form.setStyleSheet("background:rgb(170, 255, 255)qlineargradient(spread:repeat, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 223, 231, 255), stop:1 rgba(255, 255, 255, 255));\n"
"\n"
"QPushButton#evilButton:pressed {\n"
"    background-color: rgb(224, 0, 0);\n"
"    border-style: inset;\n"
"}")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(180, 191, 221, 31))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("border-style: outset;\n"
"    border-width: 2px;\n"
"    border-radius: 10px;\n"
"    border-color: rgb(0, 255, 255);\n"
"background:rgb(255, 255, 255);\n"
"color: rgb(0, 173, 173);")
        self.lineEdit.setCursorMoveStyle(QtCore.Qt.VisualMoveStyle)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        self.lineEdit_2.setGeometry(QtCore.QRect(180, 250, 221, 31))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setAutoFillBackground(False)
        self.lineEdit_2.setStyleSheet("background:rgb(255, 255, 255);\n"
"border-style: outset;\n"
"    border-width: 2px;\n"
"    border-radius: 10px;\n"
"    border-color: rgb(0, 255, 255);\n"
"color: rgb(0, 156, 156);")
        self.lineEdit_2.setInputMethodHints(QtCore.Qt.ImhHiddenText|QtCore.Qt.ImhNoAutoUppercase|QtCore.Qt.ImhNoPredictiveText|QtCore.Qt.ImhSensitiveData)
        self.lineEdit_2.setInputMask("")
        self.lineEdit_2.setFrame(True)
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_2.setClearButtonEnabled(False)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(120, 90, 221, 41))
        self.label.setMaximumSize(QtCore.QSize(221, 16777215))
        font = QtGui.QFont()
        font.setFamily("Tahoma")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("Background:rgb(255, 255, 255);\n"
"color:rgb(0, 248, 248)\n"
"")
        self.label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label.setObjectName("label")
        self.graphicsView = QtWidgets.QGraphicsView(Form)
        self.graphicsView.setGeometry(QtCore.QRect(90, 70, 381, 311))
        self.graphicsView.setStyleSheet("background:rgb(255, 255, 255);\n"
"border-radius:10px;\n"
"")
        self.graphicsView.setObjectName("graphicsView")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(180, 170, 91, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:rgb(0, 255, 255);\n"
"\n"
"background:rgb(255, 255, 255)")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(180, 230, 91, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background:rgb(255, 255, 255);\n"
"color:rgb(0, 255, 255)")
        self.label_3.setObjectName("label_3")
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(180, 330, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Algerian")
        font.setPointSize(14)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("color:rgb(255, 255, 255)\n"
"")
        self.pushButton_2.setObjectName("pushButton_2")
        self.checkBox = QtWidgets.QCheckBox(Form)
        self.checkBox.setGeometry(QtCore.QRect(180, 290, 121, 20))
        self.checkBox.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 190, 190);")
        self.checkBox.setObjectName("checkBox")
        self.graphicsView.raise_()
        self.lineEdit.raise_()
        self.lineEdit_2.raise_()
        self.label.raise_()
        self.label_2.raise_()
        self.label_3.raise_()
        self.pushButton_2.raise_()
        self.checkBox.raise_()

        self.retranslateUi(Form)
        
        self.pushButton_2.clicked.connect(self.login)
        self.pushButton_2.clicked.connect(Form.close)

        self.checkBox.toggled['bool'].connect(self.show)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Login"))
        self.lineEdit.setPlaceholderText(_translate("Form", "Enter admin Username"))
        self.lineEdit_2.setPlaceholderText(_translate("Form", "Enter admin password"))
        self.label.setText(_translate("Form", "Admin Login "))
        self.label_2.setText(_translate("Form", "USERNAME"))
        self.label_3.setText(_translate("Form", "PASSWORD"))
        self.pushButton_2.setText(_translate("Form", "Login"))
        self.checkBox.setText(_translate("Form", "Show password"))

    def show(self):
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Normal)

    def show1(self):
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)

    def login(self):
        if self.lineEdit.text()== "" or self.lineEdit_2.text()== "":
            from PyQt5.QtWidgets import QMessageBox
            msgBox = QMessageBox()
            msgBox.setIcon(QMessageBox.Information)
            msgBox.setText("Please Enter Username & Password First")
            msgBox.setWindowTitle("Information")
            msgBox.setStandardButtons(QMessageBox.Ok )

            returnValue = msgBox.exec()
            if returnValue == QMessageBox.Ok:
                from login import Ui_Form
                self.Form = QtWidgets.QWidget()
                self.ui = Ui_Form()
                self.ui.setupUi(self.Form)
                self.Form.show()

        elif self.lineEdit.text()== "admin":
            if self.lineEdit_2.text()=="admin123":
                from home import Ui_MainWindow
                self.Form = QtWidgets.QMainWindow()
                self.ui = Ui_MainWindow()
                self.ui.setupUi(self.Form)
                self.Form.show()
                
        else:
            from PyQt5.QtWidgets import QMessageBox
            msgBox = QMessageBox()
            msgBox.setIcon(QMessageBox.Critical)
            msgBox.setText("Sorry, Wrong Password !! please enter correct password")
            msgBox.setWindowTitle("ALERT")
            msgBox.setStandardButtons(QMessageBox.Ok )

            returnValue = msgBox.exec()
            if returnValue == QMessageBox.Ok:
                from login import Ui_Form
                self.Form = QtWidgets.QWidget()
                self.ui = Ui_Form()
                self.ui.setupUi(self.Form)
                self.Form.show()

import service


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
